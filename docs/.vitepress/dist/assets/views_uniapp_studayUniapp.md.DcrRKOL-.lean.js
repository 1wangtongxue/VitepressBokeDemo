import{_ as l,D as i,c as o,I as e,w as p,l as n,a,a1 as t,o as r}from"./chunks/framework.BN8UrsJY.js";const D=JSON.parse('{"title":"学习uniapp","description":"","frontmatter":{},"headers":[],"relativePath":"views/uniapp/studayUniapp.md","filePath":"views/uniapp/studayUniapp.md"}'),c={name:"views/uniapp/studayUniapp.md"},u=t("",7),d=n("p",null,[a("在小程序中，加载一个新的页面时，先是执行"),n("strong",null,"onLoad"),a("再执行"),n("strong",null,"onShow"),a("后执行"),n("strong",null,"onReady"),a("。"),n("br")],-1),h=n("div",{style:{display:"flex","align-items":"center"}},null,-1),_=t("",19),b=n("br",null,null,-1),g=t("",13),m=t("",10),q=n("br",null,null,-1),f=n("br",null,null,-1),v=t("",3),T=t("",4);function k(P,x,y,A,S,$){const s=i("font");return r(),o("div",null,[u,e(s,{color:"red"},{default:p(()=>[a("onLoad 、 onReady和onShow 的区别在于: ")]),_:1}),d,h,n("p",null,[a("在执行"),e(s,{color:"red"},{default:p(()=>[a("onLoad")]),_:1}),a("函数时，页面还没有被渲染，无法进行dom操作，而且获取参数并且只请求一次的事件可以放在onLoad里， 在 "),e(s,{color:"red"},{default:p(()=>[a("onReady")]),_:1}),a(" 函数执行时，页面已经被渲染出来了，就可以进行dom操作了。 而"),e(s,{color:"red"},{default:p(()=>[a(" onShow")]),_:1}),a("函数是每次显示页面时都会执行")]),_,n("p",null,[a("页面引入外部样式还是使用@import语句。"),b,a(" 选择器注意：在uniapp中不可使用 "),e(s,{color:"red"},{default:p(()=>[a(" *")]),_:1}),a(" 选择器")]),g,n("p",null,[a("是以标签的形式来跳转的，该组件类似标签 "),e(s,{style:{color:"red"}},{default:p(()=>[a("a")]),_:1}),a(" 组件，但只能跳转本地页面，目标页面必须在page.json中注册")]),m,n("p",null,[a("组件之间：可以使用uni自带的"),e(s,{style:{color:"red"}},{default:p(()=>[a("uni.$emit")]),_:1}),a(" 和"),e(s,{style:{color:"red"}},{default:p(()=>[a("uni.$on")]),_:1}),q,a(" uni.$emit触发全局的自定义事件。附加参数都会传给监听器回调。"),f,a(" uni.$on监听全局的自定义事件。回调函数接收所传入的参数")]),v,n("p",null,[a("因为uni.$emit和uni.$on触发的都是全局跨页面传参，所以需要及时的销毁事件监听，这时候就要使用了"),e(s,{style:{color:"red"}},{default:p(()=>[a("uni.$off")]),_:1}),a("， 比如页面onload里面uni.$on注册了监听，onUnload里面就使用uni.$off销毁监听。")]),T])}const w=l(c,[["render",k]]);export{D as __pageData,w as default};
